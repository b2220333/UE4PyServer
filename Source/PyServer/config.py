# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
import argparse,sys,os
parser = argparse.ArgumentParser()
parser.add_argument("--entry_point", help=\
    "sets the module where main_loop function exists if the entrypoint file does not exists it is created "+\
    "with the functions main_loop and kill")
parser.add_argument("--entry_path", help="a path where the entry_point exists")
args = parser.parse_args()
file_str='#Autogenerated file (by config.py) dont edit!'

if args.entry_path is not None:
    file_str+='''
import sys
sys.path.append('%s')
''' % args.entry_path

file_str+="""
import track_test
main_module=track_test
main_loop=track_test.main_loop
kill=track_test.kill
def reload():
  import imp
  imp.reload(track_test)
  if hasattr(track_test,'reload'):
    track_test.reload()
  print('entrypoint reloaded')
"""

if args.entry_point is not None:
    fd=open("Private/entry_point.py","w")
    fd.write(file_str.replace('track_test',args.entry_point))
    fd.close()

minimal_file='''# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
from Wrappers import phandlers as ph
def main_loop(gworld):
    while 1:
        print('in main loop')
        yield

def kill():
    print('done!')
'''
if args.entry_point is not None:
    if args.entry_path is None:
        entry_path='Private/' 
    else:
        entry_path=args.entry_path
    entrypoint_file=entry_path+'/'+args.entry_point+'.py'
    if not os.path.isfile(entrypoint_file):
        print('creating: ',entrypoint_file)
        open(entrypoint_file,'wb').write(minimal_file.encode('utf8'))

